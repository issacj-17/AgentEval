[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "agenteval"
version = "1.0.0"
description = "Multi-Agent AI Evaluation Platform with Trace-Based Root Cause Analysis"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "AgentEval Team", email = "team@agenteval.dev"},
]
keywords = [
    "ai", "agents", "evaluation", "testing", "aws", "bedrock", "observability", "tracing",
]

dependencies = [
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "boto3>=1.34.0",
    "aioboto3>=12.3.0",
    "httpx>=0.26.0",
    "aiofiles>=23.2.0",
    "jinja2>=3.1.0",
    "opentelemetry-api>=1.22.0",
    "opentelemetry-sdk>=1.22.0",
    "opentelemetry-instrumentation-fastapi>=0.43b0",
    "opentelemetry-instrumentation-httpx>=0.43b0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.22.0",
    "structlog>=24.1.0",
    "tenacity>=8.2.3",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.8.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "detect-secrets>=1.4.0",
    "mdformat>=0.7.17",
    "mdformat-gfm>=0.3.5",
    "mdformat-frontmatter>=2.0.1",
    "boto3-stubs[bedrock-runtime,dynamodb,s3,xray,events]>=1.34.0",
]

[project.scripts]
agenteval = "agenteval.cli.run_evaluation:cli_main"

[tool.hatch.build.targets.wheel]
packages = ["src/agenteval"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = ["-ra", "-q", "--strict-markers", "--cov=agenteval"]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"

[tool.ruff]
line-length = 100
target-version = "py311"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "S",  # flake8-bandit (security)
]
ignore = [
    "E203",  # whitespace before ':'
    "E501",  # line too long (handled by formatter)
    "S101",  # use of assert (OK in tests)
    "S104",  # possible binding to all interfaces
    "S108",  # hardcoded temp file
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101", "ARG", "S105", "S106"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
exclude = ["tests/"]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.mdformat]
wrap = 100
number = false
